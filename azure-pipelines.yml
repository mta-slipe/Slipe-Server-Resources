trigger:
- main
pr:
- main

variables:
  solution: 'SlipeServer.Resources.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:   
- job: 'dotnet_build'
  pool:
    vmImage: 'windows-2022'

  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '8.x'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet restore'
    inputs:
      command: 'restore'
      feedsToUse: 'select'
  - task: DotNetCoreCLI@2
    displayName: 'dotnet build'
    inputs:
      command: 'build'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet pack'
    inputs:
      command: 'pack'
      packagesToPack: '**/SlipeServer.Resources.Base.csproj;**/SlipeServer.Resources.Parachute.csproj;**/SlipeServer.Resources.NoClip.csproj;**/SlipeServer.Resources.Text3d.csproj;**/SlipeServer.Resources.Reload.csproj;**/SlipeServer.Resources.DGS.csproj;**/SlipeServer.Resources.Watermark.csproj;**/SlipeServer.Resources.BoneAttach.csproj;**/SlipeServer.Resources.Scoreboard.csproj;**/SlipeServer.Resources.ClientElements.csproj;**/SlipeServer.Resources.DiscordrichPresence.csproj'
      versioningScheme: 'byPrereleaseNumber'
      majorVersion: '0'
      minorVersion: '1'
      patchVersion: '0'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet publish'
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: 'SlipeServer.Resources.sln'
      arguments: '--output $(Build.ArtifactStagingDirectory)'
      
  - task: PublishBuildArtifacts@1
    displayName: 'publish artifacts'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
